function OnRibbonScriptLoad(functionName){
	var _functionName = functionName;
    var addScript = function(filepath, callback) {
        if (filepath) {
            var fileref = document.createElement('script');
            var done = false;
            var head = document.getElementsByTagName("head")[0];

            fileref.onload = fileref.onreadystatechange = function () {
                if (!done && (!this.readyState || this.readyState === "loaded" || this.readyState === "complete")) {
                    done = true;

                    callback();

                    // Handle memory leak in IE
                    fileref.onload = fileref.onreadystatechange = null;
                    if (head && fileref.parentNode) {
                        head.removeChild(fileref);
                    }
                }
            };

            fileref.setAttribute("type", "text/javascript");
            fileref.setAttribute("src", filepath);

            head.appendChild(fileref);
        }
    }
    var scriptsConfig = {
        baseUrl: '../WebResources/',
        shim: {
        "jquery-ui": {
            deps: ['jquery', 'loadJQueryCSS']
            }
        },
        paths: {
        "q": "se_q",
        "jquery": "se_jquery2.2.4.min",
        "jquery-ui": "se_jquery.ui1.11.4",
        "loadJQueryCSS" : "se_loadJQueryCSS",
        "ScriptEditor_Main":"se_ScriptEditor_Main"
        }
    };
	var requireCallback = function (){
		requirejs.config(scriptsConfig);

		requirejs(['jquery','q','jquery-ui','loadJQueryCSS','ScriptEditor_Main'], function( JQ ) {
			var Q = require('q');
			//get correct configs
			var serverUrl = Xrm.Page.context.getClientUrl();
			var currentEntity = Xrm.Page.data.entity.getEntityName();
			var currentFormView = Xrm.Page.ui.formSelector.getCurrentItem().getId();
			var configResourcePath = serverUrl+"/WebResources/se_"+currentEntity+"/"+currentFormView.replace(/-/g,"").toLowerCase()+".json";
			JQ.get(configResourcePath,function(data){
				var configs = JSON.parse(data);
				
				var relevantConfig = configs.filter(function(c){return c.FunctionName===_functionName});
				if(relevantConfig.length == 1){
					window.ScriptEditor["instanceof_"+_functionName] = new ScriptEditor(relevantConfig[0],JQ,Q);
					//run
					window.ScriptEditor["instanceof_"+_functionName].run(0);
				}else{
					console.log("no relevant config with supplied functionName: "+_functionName+" was found");
				}
			});
		});
	}

	var surl = Xrm.Page.context.getClientUrl();
    surl = surl+"/WebResources/se_require.js";
    addScript(surl,requireCallback);
}